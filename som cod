% AI-Based Facial Recognition using Self-Organizing Map (SOM) Neural Network

% Load and preprocess the images
faceImages = loadImages('path_to_face_images'); % Replace with your actual path
objectImages = loadImages('path_to_object_images'); % Replace with your actual path

% Convert images to grayscale
faceImagesGray = rgb2grayImages(faceImages);
objectImagesGray = rgb2grayImages(objectImages);

% Combine face and object images
allImages = cat(3, faceImagesGray, objectImagesGray);

% Reshape images for SOM input
inputData = reshapeImagesForSOM(allImages);

% Define SOM parameters
somDims = [10, 10]; % 10x10 grid for SOM
epochs = 100; % Number of training epochs

% Create and train SOM
som = selforgmap(somDims);
som.trainParam.epochs = epochs;
som = train(som, inputData);

% Test the SOM with new images
testFaceImages = loadImages('path_to_test_face_images'); % Replace with your actual path
testObjectImages = loadImages('path_to_test_object_images'); % Replace with your actual path

% Convert test images to grayscale
testFaceImagesGray = rgb2grayImages(testFaceImages);
testObjectImagesGray = rgb2grayImages(testObjectImages);

% Combine test face and object images
testImages = cat(3, testFaceImagesGray, testObjectImagesGray);

% Reshape test images for SOM input
testInputData = reshapeImagesForSOM(testImages);

% Classify test images using the trained SOM
somOutputs = som(testInputData);

% Evaluate the performance
faceRecognitionRate = calculateRecognitionRate(somOutputs, length(testFaceImages)); 

% Display the results
disp(['Face Recognition Rate: ', num2str(faceRecognitionRate), '%']);

% Helper functions
function images = loadImages(folderPath)
    % Load images from the specified folder
    imageFiles = dir(fullfile(folderPath, '*.jpg')); % Adjust file extension as needed
    numImages = length(imageFiles);
    images = [];
    
    for i = 1:numImages
        img = imread(fullfile(folderPath, imageFiles(i).name));
        images(:, :, :, i) = img;
    end
end

function grayImages = rgb2grayImages(images)
    % Convert RGB images to grayscale
    numImages = size(images, 4);
    grayImages = zeros(size(images, 1), size(images, 2), numImages);
    
    for i = 1:numImages
        grayImages(:, :, i) = rgb2gray(images(:, :, :, i));
    end
end

function reshapedData = reshapeImagesForSOM(images)
    % Reshape images to 2D array for SOM input
    numImages = size(images, 3);
    reshapedData = reshape(images, [], numImages);
    reshapedData = double(reshapedData) / 255; % Normalize pixel values
end

function rate = calculateRecognitionRate(outputs, numFaces)
    % Calculate the recognition rate based on SOM outputs
    % Assuming the first 'numFaces' outputs correspond to faces
    % and the remaining outputs correspond to objects
    
    correct = 0;
    for i = 1:numFaces
        if outputs(i) == 1
            correct = correct + 1;
        end
    end
    
    rate = (correct / numFaces) * 100;
end
